@using Ckan_Front_End.Api.Model
@using Ckan_Front_End.Web.Models.Helpers
@using System.Text
@model Package

@{
    var formatTypes = Ckan_Front_End.Web.Models.Helpers.SettingsHelper.GetResourceSettings().Types;
}
<div class="package">

    @* Show the resources *@
    @if (Model.Resources.Count > 0)
    {
        <div class="container">
        <h2 class="table-title">Resources</h2>
        <table cellpadding="0" cellspacing="0">
            <thead>
                <tr>
                    <th>Description</th>
                    <th width="150">Format</th>
                    <th width="50">Action</th>
                </tr>
            </thead>
            <tbody>
            @foreach (Resource resource in Model.Resources)
            {
                <tr>
               
                    <td>
                        @if (!String.IsNullOrEmpty(resource.Description))
                        {   
                          @resource.Description
                        }
                        else
                        {
                           @("None")
                        }
                    </td>

                    <td class="text-center">
                        @if (!String.IsNullOrEmpty(resource.Format))
                        {
                            if (!formatTypes.ContainsKey(resource.Format))
                            {
                                <span class="format">@resource.Format</span>
                            }
                            else
                            {
                                <span class="tooltip format" title="@formatTypes[resource.Format].Title">@resource.Format</span>
                            }
                        }
                        else
                        {
                            @("Unspecified")
                        }

                    </td>

                    <td nowrap="nowrap">
                        @{
                        Ckan_Front_End.Web.Models.Settings.ResourceType format = null;
                        if (formatTypes.ContainsKey(resource.Format))
                        {
                            format = formatTypes[resource.Format];
                        };               
                        }
                        @if (format == null || format.Actions.Count == 0)
                        {
                            <a href="@resource.Url" class="package-action"
                            data-format="@resource.Format" 
                            data-package="@Model.Name" 
                            data-resource="@resource.Description"
                            data-action="Download"
                            target="_blank">Download</a>
                        }
                        else
                        {
  
                            foreach (var action in formatTypes[resource.Format].Actions)
                            {
                                <a href="@action.BuildUrl(resource.Url)" class="package-action" 
                                data-format="@resource.Format" 
                                data-package="@Model.Name" 
                                data-resource="@resource.Description"
                                data-action="@action.Action"
                                target="_blank">@action.Action</a>
                            }
                           
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
        </div>
    }
    
    @* Show the package details*@
        <div class="container">
            <h2 class="table-title">Details</h2>
            <table cellpadding="0" cellspacing="0">
                <tbody>
                    
                @if (!String.IsNullOrEmpty(Model.Author))
                {
                    <tr>
                        <th class="text-right">
                            Author
                        </th>
                        <td>
                            @Model.Author
                        </td>
                    </tr>
                }
                
                @if (!String.IsNullOrEmpty(Model.AuthorEmail))
                {
                    <tr>
                        <th class="text-right">
                            Author Email
                        </th>
                        <td>
                            <a class="package-action" href="mailto:@Model.AuthorEmail">@Model.AuthorEmail</a>
                        </td>
                    </tr>
                } 
                
                
                @if (!String.IsNullOrEmpty(Model.Maintainer))
                {
                    <tr>
                        <th class="text-right">
                            Maintainer
                        </th>
                        <td>
                            @Model.Maintainer
                        </td>
                    </tr>
                }
                
                @if (!String.IsNullOrEmpty(Model.MaintainerEmail))
                {
                    <tr>
                        <th class="text-right">
                            Maintainer Email
                        </th>
                        <td>
                            <a class="package-action" href="mailto:@Model.MaintainerEmail">@Model.MaintainerEmail</a>
                        </td>
                    </tr>
                } 

                @if (!String.IsNullOrEmpty(Model.Version))
                {
                    <tr>
                        <th class="text-right">
                            Version
                        </th>
                        <td>
                            @Model.Version
                        </td>
                    </tr>
                }  
                              
                @if (Model.Extras.Count > 0)
                {

                    foreach (var key in Model.Extras.Keys)
                    {
                        if (!String.IsNullOrEmpty(Model.Extras[key]))
                        {
                            <tr>
                                <th class="text-right">@SettingsHelper.GetPackageExtraFieldLabel(key)</th>
                                <td>@Model.Extras[key]</td>
                            </tr>
                        }
                    }
                }
                </tbody>
            </table>
        </div>
</div>

@if (SettingsHelper.GetGoogleAnalyticsEnabled())
{
<script language="javascript">
    // Track click events on resources
    $("a.package-action").click(function () {
        var format = $(this).attr('data-format');
        var package = $(this).attr('data-package');
        var url = $(this).attr('href');
        _gaq.push([
            '_trackEvent',
            'Package:' + package,
            'Resource:' + format,
            url]);
    });
</script>
}

@if (SettingsHelper.GetDisqusPackageEnabled())
{
    Html.RenderPartial("~/Views/Shared/Package/_Disqus.cshtml", Model);
}
